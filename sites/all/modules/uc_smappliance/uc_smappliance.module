<?php
// beta site
//http://203.177.1.160/smacapi/apidev.php
// define('USERNAME_MAX_LENGTH', 100);
define("SM_IP" ,"http://smacdeals.com/smacapi/apidev2.php?cardnum=");
$_SESSION['registration']['smac'] = ' ';


function uc_smappliance_permission(){
	return array(
		'edit own account' => array(
			'title' => t('Edit Own Account'),
			'description' => 'Permission to edit his/her profile',
		),
	);
}


/*
	HOOK MENu
*/

function uc_smappliance_menu(){
	$items = array();
	$items['delete-smac/%'] = array(
		'title' => 'Page to Delete SMAC',
		'page callback' => '_delete_smac',
		'access callback' => TRUE,
		'file' => 'inc/delete.smac.pages.inc',
		'type' => MENU_CALLBACK,
  	);
	
	$items['edit/user/account-details'] = array(
		'title' => 'Edit Account Details', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_edit_account_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['edit/user/login-details'] = array(
		'title' => 'Edit Login Details', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_edit_login_details_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['edit/user/address-details'] = array(
		'title' => 'Edit Address Details', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_edit_address_details_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['edit/user/smac-details'] = array(
		'title' => 'Add Loyalty Cards', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_edit_smac_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['add/user/smac-details'] = array(
		'title' => 'Add Loyalty Cards', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_add_smac_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['change-email'] = array(
		'title' => 'Change Email', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_uc_change_email_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['change-password'] = array(
		'title' => 'Reset Password', 
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_uc_change_password_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['remove-card'] = array(
		'title' => '',
		'description' => '',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_remove_card_form'), 
		'access callback' => 'user_access',
		'access arguments' => array('edit own account'),
	);
	
	$items['forgot-password-email-triger'] = array(
		'title'=> 'Forgot Password Notice',
        'page callback' => 'forgot_password_email',
        'access arguments' => array('shipping rate'),
		'access callback' => 'user_access',
		'theme arguments' => array('admin_theme'),
        'type' => MENU_CALLBACK,
    );

	return $items;
}


/*
	function for forgot passsword Trigger in Dashboard "Members Profile"
*/
function forgot_password_email(){
	global $user;
	$arrayroles = array(3,14,19,12);
	$validationuser = false;
	foreach($arrayroles as $value):
		if(isset($user->roles[$value]))
			$validationuser = true;
	endforeach;	
	if($validationuser == true && isset($_GET['user_load_id'])){
			$useraccount = user_load($_GET['user_load_id']);
			if(isset($useraccount->roles[5])){
				_user_mail_notify('register_no_approval_required', $useraccount);	
				drupal_set_message(t("Resend Activation Email to !email_guest",array("!email_guest"=>$useraccount->mail)));
				drupal_goto('dashboard/member_profile');
				
			}else{
				if(isset($useraccount->uid)){
					_user_mail_notify('password_reset', $useraccount);
					drupal_set_message(t("Request reset password to !email_guest",array("!email_guest"=>$useraccount->mail)));
					drupal_goto('dashboard/member_profile');
				}else{
					drupal_set_message(t("Invalid User id"),'error');
					drupal_goto('dashboard/member_profile');
				}
			}
	}else{
		drupal_set_message(t("ACCESS DENIED"),'error');	
		drupal_goto('<fron>');
	}
}


function _user_validate_name($name) {
  if (!$name) {
    // return t('You must enter a username.');
	// return t('You must enter a username.');
  }
  if (substr($name, 0, 1) == ' ') {
    return t('The username cannot begin with a space.');
  }
  if (substr($name, -1) == ' ') {
    return t('The username cannot end with a space.');
  }
  if (strpos($name, '  ') !== FALSE) {
    return t('The username cannot contain multiple spaces in a row.');
  }
  if (preg_match('/[^\x{80}-\x{F7} a-z0-9@_.\'-]/i', $name)) {
    return t('The username contains an illegal character.');
  }
  if (preg_match('/[\x{80}-\x{A0}' .         // Non-printable ISO-8859-1 + NBSP
                  '\x{AD}' .                // Soft-hyphen
                  '\x{2000}-\x{200F}' .     // Various space characters
                  '\x{2028}-\x{202F}' .     // Bidirectional text overrides
                  '\x{205F}-\x{206F}' .     // Various text hinting characters
                  '\x{FEFF}' .              // Byte order mark
                  '\x{FF01}-\x{FF60}' .     // Full-width latin
                  '\x{FFF9}-\x{FFFD}' .     // Replacement characters
                  '\x{0}-\x{1F}]/u',         // NULL byte and control characters
                  $name)) {
    return t('The username contains an illegal character.');
  }
  if (drupal_strlen($name) > 100) {
    return t('The username %name is too long: it must be %max characters or less.', array('%name' => $name, '%max' => USERNAME_MAX_LENGTH));
  }
}

function _remove_card_form($form, &$form_state){
	drupal_set_title('');
	global $user;
	$form['#account'] = $GLOBALS['user'];
	$smac = '';
	for($ctr = 0; $ctr <= 15; $ctr++){
		// $smac .= isset($_GET['smac-'.$ctr]) ? $_GET['smac-'.$ctr] . '<br />' : NULL;
		$smac = isset($_GET['smac-'.$ctr]) ? $_GET['smac-'.$ctr] : NULL;
		if(!empty($smac)){
			$newcard1 .= substr($smac,0,4).'-'.substr($smac,4,4).'-'.substr($smac,8,4).'-'.substr($smac,12,4).substr($smac,16) . '<br />';
		}
	}
	
	if(empty($newcard1)){
		drupal_set_message('Please select Loyalty Card(s) you want to delete.',$type = 'error');
		drupal_goto('my-account');
		
	}
	
	$form['additional'] = array(
		'#markup' => 'Are you sure you want to remove the following card numbers? <br />'.$newcard1,
		'#prefix' => '<div id="custo-infof">',
		'#suffix' => '</div>',
		'#attributes' => array('class' => array('message-status-wrapper')),
	);
	
	
	$form['yesbutton'] = array(
		'#type' => 'submit',
		'#value' => 'Yes',
	);
	
	$form['No'] = array(
		'#type' => 'submit',
		'#value' => t('No'),
	);
			
	return $form;
}

function _remove_card_form_submit($form, &$form_state){
	
	if($form_state['values']['op'] == 'No'){
		$form_state['redirect'] = 'my-account';
	}else{
		
		
		global $user; 
		$account = user_load($user->uid);
		$smac = '';
		$sogood = '';
		$test = '';
		
		$xsmac1 = (!empty($account->field_smac_1['und']['0']['value']))? $account->field_smac_1['und']['0']['value']: '';
		//$keyexplode2 = explode("&nbsp;",$xsmac1);
		
		for($ctr = 0; $ctr <= 15; $ctr++){
			$smac .= isset($_GET['smac-'.$ctr]) ? $_GET['smac-'.$ctr] .'*': NULL;
		}
		$keyexplode = explode("*",$smac);

		$one = !empty($keyexplode[0]) ? $keyexplode[0].'xxx' : NULL;
		$two = !empty($keyexplode[1]) ? $keyexplode[1].'xxx' : NULL;
		$three = !empty($keyexplode[2]) ? $keyexplode[2].'xxx' : NULL;
		$four = !empty($keyexplode[3]) ? $keyexplode[3].'xxx' : NULL;
		$five = !empty($keyexplode[4]) ? $keyexplode[4].'xxx' : NULL;
		$six = !empty($keyexplode[5]) ? $keyexplode[5].'xxx' : NULL;
		$seven = !empty($keyexplode[6]) ? $keyexplode[6].'xxx' : NULL;
		$eight = !empty($keyexplode[7]) ? $keyexplode[7].'xxx' : NULL;
		$nine = !empty($keyexplode[8]) ? $keyexplode[8].'xxx' : NULL;
		$ten = !empty($keyexplode[9]) ? $keyexplode[9].'xxx' : NULL;
		

		
		$xxx = array($one, $two, $three, $four, $five, $six, $seven, $eight, $nine ,$ten); 

		
		$bodytag = str_replace($xxx, "", $xsmac1);

		
		$edit = array();
		$edit = array(
			'field_smac_1' => array(
				'und' => array(
					0 => array(
						'value' => $bodytag,
					),
				),
			),
		);
		
		user_save($form['#account'], $edit);
		$form_state['redirect'] = 'my-account';
	}
}

function _uc_change_password_form($form, &$form_state){
	global $user;
	$form['#account'] = $GLOBALS['user'];
	
	$form['pass'] = array(
	  '#type' => 'password_confirm',
	  '#element_validate' => array('_custom_pass_validate'),
	  '#maxlength' => 15,
	  '#description' => t('Provide a password for the new account in both fields. Password must be at least 6 characters.'),
	);
	
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);
	return $form;
}

function _uc_change_password_form_submit(&$form, &$form_state){
	global $user;
	$edit = array();
	$passlen = strlen(trim($form_state['values']['pass']));
	
	if($passlen < 6){
		drupal_set_message('Password allow a minimum of 6 and maximum of 15 characters.',$type = 'error');
	}else{
		$edit = array(
			'pass' => $form_state['values']['pass'],
		);
		user_save($form['#account'], $edit);
		$form_state['redirect'] = 'my-account';
	}
}
function _uc_change_email_form($form, &$form_state){
	global $user;
	$form['#account'] = $GLOBALS['user'];
	$form['current-mail'] = array(
		'#type' => 'textfield',
		'#title' => t('Current Email'),
		'#default_value' => $user->mail,
		'#required' => TRUE,
		'#disabled' => TRUE,
	);

	$form['mail'] = array(
		'#type' => 'textfield',
		'#title' => t('New Email'),
		'#default_value' => '',
		'#element_validate' => array('_check_new_email_validate'),
		'#required' => TRUE,
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);
	
	return $form;
}

function _check_new_email_validate(&$form, &$form_state){
	$account = $form['#account'] = $GLOBALS['user'];
	if(!valid_email_address($form_state['values']['mail'])){
		form_set_error('mail', t('The email address appears to be invalid.'));
	}
	else{
	 if ($error = user_validate_mail($form_state['values']['mail'])) {
		  form_set_error('mail', $error);
		}
		elseif ((bool) db_select('users')->fields('users', array('uid'))->condition('uid', $account->uid, '<>')->condition('mail', db_like($form_state['values']['mail']), 'LIKE')->range(0, 1)->execute()->fetchField()) {
		  // Format error message dependent on whether the user is logged in or not.
		  if ($GLOBALS['user']->uid) {
			form_set_error('mail', t('The e-mail address %email is already taken.', array('%email' => $form_state['values']['mail'])));
		  }
		  else {
			form_set_error('mail', t('The e-mail address %email is already registered. <a href="@password">Have you forgotten your password?</a>', array('%email' => $form_state['values']['mail'], '@password' => url('user/password'))));
		  }
		}
	}
	
	if($form_state['values']['mail'] == $form_state['values']['current-mail']){
		form_set_error('mail',t('Your new email cannot be the same as your old email'));
	}
}

function _uc_change_email_form_submit(&$form, &$form_state){
	
	global $user;
	$edit = array();
	$edit = array(
			'mail' => $form_state['values']['mail'],
		);
	//$form_state['values']['current-mail']
	user_save($form['#account'], $edit);
	
	_uc_smappliance_drupal_mail('default_from', $form_state['values']['current-mail'], 'Change email notification', 'Hi '.  $user->name .', <br /><br /><br />You have successfully changed your email to ' . $form_state['values']['mail'] . '.<br /><br /> <br />SM Appliance Center Inc.');
	
	drupal_set_message('You have successfully changed your email address');
	$form_state['redirect'] = '/add-card-succes';

}

//
function _add_smac_form($form, &$form_state){
	drupal_add_css(drupal_get_path('module','uc_smappliance').'/account.css');
	drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/transfer.js');
	
	$firtsname_unique_code = isset($form_state['values']['firtsname_unique_code']) ? $form_state['values']['firtsname_unique_code'] : gen_chars(9);
	$form['firtsname_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $firtsname_unique_code,
		'#maxlength' => -15,
		'#attributes' => array('style' => array('display: none;'))
	);
	
	$lastname_unique_code = isset($form_state['values']['lastname_unique_code']) ? $form_state['values']['lastname_unique_code'] : gen_chars(9);
	$form['lastname_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => -50, 
		'#value' => $lastname_unique_code,
		'#maxlength' => 15,
		'#attributes' => array('style' => array('display: none;'))
	);
	$dob_unique_code = isset($form_state['values']['dob_unique_code']) ? $form_state['values']['dob_unique_code'] : gen_chars(9);
	$form['dob_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => -50, 
		'#value' => $dob_unique_code,
		'#maxlength' => 15,
		'#attributes' => array('style' => array('display: none;'))
	);
	
	$form['#account'] = $GLOBALS['user'];
	$form['smac1'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac2'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac3'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac4'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,

		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form["markup1"] = array("#markup" => "<div id='m-one'>-</div>");
	$form['smac5'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac6'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac7'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac8'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form["markup2"] = array("#markup" => "<div id='m-two'>-</div>");
	$form['smac9'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac10'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac11'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac12'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form["markup3"] = array("#markup" => "<div id='m-three'>-</div>");
	$form['smac13'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac14'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	); 
	$form['smac15'] = array(
		'#type' => 'textfield',
		'#maxlength' => 1, 
		'#size' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac16'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	
	$form['validate_card'] = array( 
	  '#type' => 'button',
	  '#value' => t('Validate Card'),
	  '#ajax' => array(
		  'callback' => '_edit_smac_form_callback',
		  'method' => 'html',
		  'wrapper' => 'card-status1',
		  'effect' => 'fade',
		  'event' => 'click',
		),
	);
	$form['clear'] = array(
		'#type' => 'button',
		'#value' => t('Clear'),
		'#weight' => 5,
	);

	$form['wrapper'] = array(
		'#prefix' => '<div id="card-status1">',
		'#suffix' => '</div>',
		'#weight' => 6,
		'#attributes' => array('class' => array('message-status-wrapper')),
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
		'#weight' => 7,
	);
	
	//$form['redirect'] = '/cart/checkout';
  	return $form;
}

/*
	FORM API TEMPLATE FOR add SMAC
*/
function _add_smac_form_submit($form, &$form_state){
	global $user;
	$account = user_load($user->uid);
	$sv_smac = '';
	$test_ctr = 0;
	
	if(!empty($account->field_smac_1['und']['0']['value'])){
		$old_smac = $account->field_smac_1['und']['0']['value'];
	}
	else{
		$old_smac = '';
	}
	$query = db_select('z_add_smac', 'u');
	$query->fields('u',array('smac_no',))
		->condition('p_name', $form_state['values']['firtsname_unique_code'])
		->condition('l_name', $form_state['values']['lastname_unique_code'])
		->condition('b_day', $form_state['values']['dob_unique_code']);
	$result = $query->execute();
	
	while($record = $result->fetchAssoc()) {
		$sv_smac .= $record['smac_no'] .'xxx';
		$test_ctr += 1;
	}
	
	if(empty($sv_smac)){
		drupal_set_message("Please enter valid Loyalty Card(s).",$type = 'error');
	}else{
		$new_smac = $old_smac.$sv_smac;
		$edit = array();
		$edit = array(
			'field_smac_1' => array(
				'und' => array(
					0 => array(
						'value' => $new_smac,
					),
				),
			),
		);
		
		user_save($form['#account'], $edit);
		$smac_deleted = db_delete('z_add_smac')
			  ->condition('p_name', $form_state['values']['firtsname_unique_code'])
			  ->execute();
		drupal_set_message('SM Advantage/Prestige/BDO has been successfully added.');
		$form_state['redirect'] = '/add-card-succes';
	}
}
//-------------------------------------------------

/*
	FORM API TEMPLATE FOR edit SMAC
*/
function _edit_smac_form($form, &$form_state){
	drupal_add_css(drupal_get_path('module','uc_smappliance').'/account.css');
	drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/transfer.js'); 
	$form['#account'] = $GLOBALS['user'];
	
	
	$lastname_unique_code = isset($form_state['values']['lastname_unique_code']) ? $form_state['values']['lastname_unique_code'] : gen_chars(9);
	$form['lastname_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $lastname_unique_code,
		'#maxlength' => -15,
		'#attributes' => array('style' => array('display: none;'))
	);
	$dob_unique_code = isset($form_state['values']['dob_unique_code']) ? $form_state['values']['dob_unique_code'] : gen_chars(9);
	$form['dob_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $dob_unique_code,
		'#maxlength' => -15,
		'#attributes' => array('style' => array('display: none;'))
	);
	$form['wrapper'] = array(
		'#prefix' => '<div id="card-status1">',
		'#suffix' => '</div>',
		'#weight' => -5,
		'#attributes' => array('class' => array('message-status-wrapper')),
	);
	
	drupal_add_js('
	(function ($) {
		$(document).ready(function(){
			$("#cboxClose").click(function(){
					  location.reload();
			});
		});
	})(jQuery);
	','inline');
	//$form["wrapper"] = array("#markup" => "<div id='test-ajax'>Enter Loyalty Cards</div>");
//	$form['wrapper'] = array(
//	  '#type' => 'fieldset',
//	  '#title' => t('Enter Loyalty Cards'),
//	  '#collapsible' => TRUE,
//	  '#collapsed' => FALSE,
//	);
	$form['smac1'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac2'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac3'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac4'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form["markup1"] = array("#markup" => "<div id='m-one'>-</div>");
	$form['smac5'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac6'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac7'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac8'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form["markup2"] = array("#markup" => "<div id='m-two'>-</div>");
	$form['smac9'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac10'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac11'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac12'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form["markup3"] = array("#markup" => "<div id='m-three'>-</div>");
	$form['smac13'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac14'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	); 
	$form['smac15'] = array(
		'#type' => 'textfield',
		'#maxlength' => 1, 
		'#size' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac16'] = array(
		'#type' => 'textfield',
		'#size' => 1,
		'#maxlength' => 1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	
	$form['validate_card'] = array( 
	  '#type' => 'button',
	  '#value' => t('Validate Card'),
	  '#ajax' => array(
		  'callback' => '_edit_smac_form_callback',
		  'method' => 'html',
		  'wrapper' => 'card-status1',
		  'effect' => 'fade',
		  'event' => 'click',
		),
	);
	$form['clear'] = array(
		'#type' => 'button',
		'#value' => t('Clear'),
		'#weight' => 5,
	);
	
	$firtsname_unique_code = isset($form_state['values']['firtsname_unique_code']) ? $form_state['values']['firtsname_unique_code'] : gen_chars(9);
	$form['firtsname_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $firtsname_unique_code,
		'#maxlength' => 15,
		'#attributes' => array('style' => array('display: none;'))
	);


	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
		'#weight' => 6,
	);
	
	
  	return $form;
}

function _edit_smac_form_callback($form, &$form_state){
	global $user;
	$ad = '';
	$account = user_load($user->uid);
	$card = '';
	for($ctr; $ctr <= 16; $ctr++){
		$card .= trim($form_state['values']['smac'.$ctr]);
	}
	
	$query = db_select('z_add_smac', 'u');
	$query->fields('u',array('p_name','smac_no',))
		->condition('p_name', $form_state['values']['firtsname_unique_code'])
		->condition('l_name', $form_state['values']['lastname_unique_code'])
		->condition('b_day', $form_state['values']['dob_unique_code']);
	$result = $query->execute();
	
	while($record = $result->fetchAssoc()) {
		$card2 = '';
		$card2 = substr($record['smac_no'],0,4).'-'.substr($record['smac_no'],4,4).'-'.substr($record['smac_no'],8,4).'-'.substr($record['smac_no'],12,4);		
		$card2 = $card2 .''.substr($record['smac_no'],16) . '<br />';
		$all_smac .= $card2;
	}
	
	
	if(strlen($card) != 16){
		//return drupal_set_message('Please enter valid SMAC No.',$type = 'error');
		return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: auto;padding: 5px 0 0 29px;">Please enter valid Loyalty Card(s).</div><strong>'. $all_smac .'</strong>';
	}
	else{
		$test = 'test';
		$check_smac = 'test';
		$mes = '';
		$url = SM_IP.$card;
		$stringData = file_get_contents($url);
		$keyexplode = explode("&#60web&#62",$stringData);
		
		
		
		if(trim($keyexplode[0]) == 'A' || trim($keyexplode[0]) == 'P'){
			$valid_mes = '';
			if(trim($keyexplode[4]) == 'invalid card type'){
				$mes ='<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px;">Invalid Card Type</div>';
			}
			
			if(empty($mes)){
				$key_ctr = 0;
				// ADD MORE VALIDATION HERE TO PREVENT DUPLICATE ENTRY
				$query = db_select('z_add_smac', 'u');
				$query->fields('u',array('smac_no',))
					->condition('p_name', $form_state['values']['firtsname_unique_code']);
				$result = $query->execute();
				
				while($record = $result->fetchAssoc()) {
					//$valid_mes .= 'Please enter new Loyalty card or click save<br />';
					if(substr($record['smac_no'],0,16) == $card){
						$valid_mes = 'xxx';
					}
				}
					
				if(!empty($account->field_smac_1['und']['0']['value'])){
					$newcard = $card.'('.trim($keyexplode[4]).')';
					//8880877060872769(SM Advantage)&nbsp;
					$keyexplodex = explode("xxx",$account->field_smac_1['und']['0']['value']);
					while(!empty($keyexplodex[$key_ctr])){
						if($keyexplodex[$key_ctr] == $card.'('.trim($keyexplode[4]).')'){ 
							$valid_mes .= 'You have already validated this card. Please enter another card number, or continue.<br />';
						}
						$key_ctr += 1;
					}
				}

				if($valid_mes != ''){
					if($valid_mes == 'xxx'){
						return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: auto;padding: 5px 0 0 29px;">You have already validated this card. Please enter another card number, or continue.</div><strong>'. $all_smac .'</strong>';
					}else{
						return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: auto;padding: 5px 0 0 29px;">Card already registered.</div><strong>'. $all_smac .'</strong>';
					}
					
				}
				else{
					$query = db_select('z_add_smac', 'u');
					$query->fields('u',array('smac_no',))
						->condition('smac_no', $card);
					$result = $query->execute();
					while($record = $result->fetchAssoc()) {
						$check_smac .= 'ing';
					}
					
					if($check_smac == 'test'){
						$smac = db_insert('z_add_smac')
						  ->fields(array('smac_no','p_name','l_name','b_day'))
						  ->values(array(
							'smac_no' => $card .'('.trim($keyexplode[4]).')',
							'p_name' => $form_state['values']['firtsname_unique_code'],
							'l_name' => $form_state['values']['lastname_unique_code'],
							'b_day' => $form_state['values']['dob_unique_code'],
						  ))
						  ->execute();
					}
					
					$query = db_select('z_add_smac', 'u');
					$query->fields('u',array('smac_no',))
						->condition('p_name', $form_state['values']['firtsname_unique_code'])
						->condition('l_name', $form_state['values']['lastname_unique_code'])
						->condition('b_day', $form_state['values']['dob_unique_code']);
					$result = $query->execute();
					
					while($record = $result->fetchAssoc()) {
						
						$newcard1 = '';
						$newcard1 .= $record['smac_no'];
						$card1 = substr($newcard1,0,4).'-'.substr($newcard1,4,4).'-'.substr($newcard1,8,4).'-'.substr($newcard1,12,4);					
						$cardto .= $card1.substr($newcard1,16) . '<br />';
						
						$test_ctr += 1;
					}
					return '<br /><strong>'.$cardto.'</strong>';
				}
			}
			else{
				//return array(drupal_set_message($mes,$type = 'error'),$check_smac);
				return $mes . $all_smac ;
			}
		}
		
		elseif(trim($keyexplode[0]) == 'B'){
			//return array(drupal_set_message('Card Block.',$type = 'error'),$all_smac);  
			return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;padding: 5px 0 0 29px;">Card you are trying to register is already inactive.</div><strong>'. $all_smac .'</strong>';
		}
		elseif(trim($keyexplode[0]) == 'I'){
			//return array(drupal_set_message('Card Inactive.',$type = 'error'),$all_smac);
			return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;padding: 5px 0 0 29px;">Card number you are trying to add is already expired.</div><strong>'. $all_smac .'</strong>';
		}
		else{
			//return array(drupal_set_message('Invalid card number.',$type = 'error'),$all_smac);
			//return array(drupal_set_message('Invalid card number.',$type = 'error'),$all_smac);
			// return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px;">Invalid Card Type.</div><strong>'. $all_smac .'</strong>';
			if(trim($keyexplode[4]) == 'invalid card type'){
				return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px; width: 200px;">Invalid Card Type.</div><strong>'.$all_smac.'</strong>';
			}elseif(trim($keyexplode[4]) == 'card does not exist'){
				return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px; width: 200px;">Card does not exist.</div><strong>'.$all_smac.'</strong>';
			}
		}
		//return array(drupal_set_message($account->field_first_name['und']['0']['value']));   /misc/message-24-error.png
	}
}


function _edit_smac_form_submit($form, &$form_state){
	global $user;
	$account = user_load($user->uid);
	$sv_smac = '';
	$test_ctr = 0;
	$old_smac = '';
	
	if(!empty($account->field_smac_1['und']['0']['value'])){
		$old_smac = $account->field_smac_1['und']['0']['value'];
	}
	else{
		$old_smac = '';
	}
		
	$query = db_select('z_add_smac', 'u');
	$query->fields('u',array('smac_no',))
		->condition('p_name', $form_state['values']['firtsname_unique_code'])
		->condition('l_name', $form_state['values']['lastname_unique_code'])
		->condition('b_day', $form_state['values']['dob_unique_code']);
	$result = $query->execute();
	
	while($record = $result->fetchAssoc()) {
		$sv_smac .= $record['smac_no'] .'xxx';
		$test_ctr += 1;
	}
	
	if(empty($sv_smac)){
		drupal_set_message("Please enter valid Loyalty Card(s).",$type = 'error');
	}else{
		$new_smac = $old_smac.$sv_smac;
		$edit = array();
		$edit = array(
			'field_smac_1' => array(
				'und' => array(
					0 => array(
						'value' => $new_smac,
					),
				),
			),
		);
		
		user_save($form['#account'], $edit);
		$smac_deleted = db_delete('z_add_smac')
			  ->condition('p_name', $form_state['values']['firtsname_unique_code'])
			  ->execute();
		drupal_set_message('SM Advantage/Prestige/BDO has been successfully added.');
		$form_state['redirect'] = '/user-save-success';
	}
}


//-------------------------------------------------
//Account Details Form
function _edit_account_form($form, &$form_state){
	//drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/jquery.maskedinput-1.2.1.pack.js');
	drupal_add_css(drupal_get_path('module','uc_smappliance').'/account.css');
	// drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/editaccount.js');
	global $user; 
	$account = user_load($user->uid);
	$form['asterisk'] =array(
		'#type' => 'item',
  		'#markup' => t('Fields with asterisk (*) are required'),
		'#weight' => -26,
	);
	
	$xtitle = (!empty($account->field_title['und']['0']['value'])) ? $account->field_title['und']['0']['value']:'';
	$xfname = (!empty($account->field_first_name['und']['0']['value'])) ? $account->field_first_name['und']['0']['value']: '';
	$xlname = (!empty($account->field_last_name['und']['0']['value'])) ? $account->field_last_name['und']['0']['value'] : '';
	$xdob = (!empty($account->field_date_ob['und']['0']['value'])) ? $account->field_date_ob['und']['0']['value']: '';
	$tin =(!empty($account->field_tin['und']['0']['value'])) ? $account->field_tin['und']['0']['value']: '';
	$mobile=(!empty($account->field_modile_no['und']['0']['value'])) ? $account->field_modile_no['und']['0']['value']: '';
	$tel=(!empty($account->field_tel_no['und']['0']['value'])) ? $account->field_tel_no['und']['0']['value']: '';
	$fax=(!empty($account->field_fax_no['und']['0']['value'])) ? $account->field_fax_no['und']['0']['value']: '';
	
	
	//dsm($account);
	$form['#account'] = $GLOBALS['user'];
	
	$active = array(1 => t('&nbsp;&nbsp;Mr.'), 2 => t('&nbsp;&nbsp;Ms.'));
	$form['acc-active'] = array(
		'#type' => 'radios',
		'#title' => t('Title'),
		'#default_value' => $xtitle,
		'#options' => $active,
		'#weight' => -21,
	);
	
	$form['acc-firstname'] = array(
	  '#type' => 'textfield',
	  '#title' => t('Firstname'),
	  '#default_value' => $xfname,
	  '#size' => 24,
	  '#maxlength' => 100,
	  '#required' => TRUE,
	  '#attributes' => array('onpaste' => array('return false')),
	);
	
	$form['acc-lastname'] = array(
	  '#type' => 'textfield',
	  '#title' => t('Lastname'),
	  '#default_value' => $xlname,
	  '#size' => 24,
	  '#maxlength' => 100,
	  '#required' => TRUE,
	  '#attributes' => array('onpaste' => array('return false')),
	);
	
	//drupal_add_library('system','ui.datepicker');
	
	 
	$form['acc-dateob'] = array(
		'#type' => 'textfield',
		'#title' => t('Date of Birth'),
		'#size' => 10,
		'#maxlength' => 10,
		'#description' => t('YYYY-MM-DD'), 
		'#default_value' => $xdob,
		'#attributes' => array('class' => array('pickadate'), 'onpaste' => 'return false'),
		'#required' => TRUE,
	);
	
	$form['acc-tin'] = array(
	  '#type' => 'textfield',
	  '#title' => t('TIN No.'),
	  '#default_value' => $tin,
	  '#size' => 24,
	  '#maxlength' => 12,
	  '#attributes' => array('onpaste' => array('return false')),
	);
	
	$form['mobile'] = array(
		'#type' => 'textfield',
		'#title' => t('Mobile No.'), 
		'#default_value' => $mobile, 
		'#maxlength' => 11, 
		'#required' => TRUE,
		'#attributes' => array('onpaste' => array('return false')),
	);
	$form['telephone'] = array(
		'#type' => 'textfield',
		'#title' => t('Telephone No.'), 
		'#default_value' => $tel, 
		'#maxlength' => 14, 
		'#attributes' => array('onpaste' => array('return false')),
		'#description' => t('Enter Telephone No.'), 
	);
	$form['faxno'] = array(
		'#type' => 'textfield',
		'#title' => t('Fax No.'), 
		'#default_value' => $fax, 
		'#maxlength' => 14, 
		'#attributes' => array('onpaste' => array('return false')),
		'#description' => t('Enter Fax No.'),
	);
	
	$form['x-submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);
	
	return $form;
}

function _edit_account_form_submit($form, &$form_state){
	global $user;
	$account = user_load($user->uid);
	
	$edit = array();
	$edit = array(
		'field_first_name' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['acc-firstname']
				),
			),
		),
		
		'field_last_name' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['acc-lastname']
				),
			),
		),
		'field_title' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['acc-active']
				),
			),
		),
		'field_date_ob' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['acc-dateob']
				),
			),
		),
		'field_tin' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['acc-tin']
				),
			),
		),
		'field_modile_no' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['mobile']
				),
			),
		),
		'field_tel_no' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['telephone']
				),
			),
		),
		'field_fax_no' => array(
			'und' => array(
				0 => array(
					'value' => $form_state['values']['faxno']
				),
			),
		),
	);
	
	user_save($form['#account'], $edit);
	drupal_set_message('Account has been updated.');
	$form_state['redirect'] = '/user-save-success';
}

function _edit_address_details_form($form, &$form_state){
	drupal_add_css(drupal_get_path('module','uc_smappliance').'/account.css');
	drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/editaccount.js');
	global $user;
	$account = user_load($user->uid);
	$form['#account'] = $GLOBALS['user'];
	
	$form['asterisk'] =array(
		'#type' => 'item',
  		'#markup' => t('Fields with asterisk (*) are required'),
		'#weight' => -26,
	);
	
	$countryoptions = _country_options();
	$fax=(!empty($account->field_fax_no['und']['0']['value'])) ? $account->field_fax_no['und']['0']['value']: '';
	$form['add-country'] = array(
		'#type' => 'select',
		'#title' => t('Country'),
		'#options' => $countryoptions,
		'#default_value' => $account->field_country_list['und']['0']['value'],
		'#weight' => -17,
		'#required' => TRUE,
		'#ajax' => array(
			'callback' => '_country_myaccount_callback', 
			'wrapper' => 'textfields', 
			'effect' => 'fade',
		),
	);
	
	$form['textfields'] = array(
		'#prefix' => '<div id="textfields">', 
		'#suffix' => '</div>', 
		'#type' => 'fieldset', 
		'#weight' => -15,
	);	
	
	if(isset($form_state['values']['add-country'])){
		$countryval = $form_state['values']['add-country'];
	}else{
		$countryval = $account->field_country_list['und']['0']['value'];
	}
	
	$setvaluecitytext = '';
	
	if($countryval == 608){
		$prov_opt = isset($form_state['values']['add-country']) ? $form_state['values']['add-country'] : $account->field_country_list['und']['0']['value'];
		$selected = isset($form_state['values']['state_prov']) ? $form_state['values']['state_prov'] : $account->field_not_ph_province['und']['0']['value'];
		$stateprov = _option_prov2($prov_opt);
		$form['textfields']['state_prov'] = array(
			'#type' => 'select',
			'#title' => t('Province'),
			'#options' => $stateprov,
			'#default_value' => $selected,
			'#required' => TRUE,
			'#weight' => -16,
				'#ajax' => array(
					'callback' => '_ajax_callback',
					'wrapper' => 'second-option',),
		);
		
		$prov = isset($selected) ? $selected : 359;
		$citymunipality = _option_muni($prov);
		$citySelected = isset($form_state['values']['city']) ? $form_state['values']['city'] : $account->field_not_ph_city['und']['0']['value'];
		$form['textfields']['city'] = array( 
			'#type' => 'select',
			'#title' => 'City/Municipality <span class="form-required" title="This field is required.">*</span>',
			'#options' => $citymunipality,
			'#default_value' => $citySelected,
			'#prefix' => '<div id="second-option">',
			'#suffix' => '</div>',
			'#weight' => -15,
			'#ajax' => array(
				'callback' => '_ajax_brgy_callback',
				'wrapper' => 'third-option',),
		);
		
		$brgy_opt = _option_brgy($citySelected);
		$brgy_selected = isset($form['textfields']['brgy']) ? $form['textfields']['brgy'] : $account->field_barangay['und']['0']['value'];
		$form['textfields']['brgy'] = array(
			'#type' => 'select',
			'#title' => t('Barangay'),
			'#options' => $brgy_opt,
			'#default_value' => $brgy_selected,
			'#prefix' => '<div id="third-option">',
			'#suffix' => '</div>',
			'#weight' => -14.9,
			'#required' => TRUE,
			'#attributes' => array(
				'class' => array('select-brgy','barangay'),
			),
		);
		$form['other_brgy'] = array(
			'#type' => 'textfield',
			'#title' => t('Other'), 
			'#default_value' => isset($account->field_other_brgy['und']['0']['value']) ? $account->field_other_brgy['und']['0']['value'] : '', 
			'#weight' => -14.8,
			'#attributes' => array(
				'onpaste' => array('return false'),
				'class' => array('other-brgy','barangay'),
			),
		);
		
	}else{
		$prov_opt = isset($form_state['values']['add-country']) ? $form_state['values']['add-country'] : $account->field_country_list['und']['0']['value'];
		$stateprov = _option_prov2($prov_opt);
		$form['textfields']['state_prov'] = array(
			'#type' => 'select',
			'#title' => t('Province'),
			'#options' => $stateprov,
			'#default_value' => $account->field_not_ph_province['und']['0']['value'],
			'#weight' => -16,
			'#required' => TRUE,
		);
		//$setvaluecitytext =  (!is_numeric($account->field_not_ph_city['und']['0']['value'])) ? ' ' : $account->field_not_ph_city['und']['0']['value'];
		
		$form['textfields']['city'] = array(
			'#default_value' =>'', 
			'#type' => 'textfield',
			'#title' => 'City<span class="form-required" title="This field is required.">*</span>', 
			'#attributes' => array('onpaste' => array('return false')),
			'#maxlength' => 100, 
			'#weight' => -13,
			'#default_value' => $account->field_not_ph_city['und']['0']['value'],
		);
	}

	$form['add_postalcode'] = array(
		'#type' => 'textfield',
		'#title' => t('Postal/Zip Code'), 
		'#default_value' => $account->field_post_zip_code['und']['0']['value'], 
		'#maxlength' => 4, 
		'#weight' => -13,
		'#attributes' => array('onpaste' => array('return false')),
	);
	
	
	$form['add_street'] = array(
		'#type' => 'textfield',
		'#title' => t('Address'), 
		'#default_value' => $account->field_billing_address['und']['0']['value'], 
		'#maxlength' => 256, 
		'#weight' => -12,
		'#required' => TRUE,
		'#attributes' => array('onpaste' => array('return false')),
	);
	
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);
	
	return $form;
}

function _edit_address_details_form_submit(&$form, &$form_state){
	$edit = array();
	$other_brgy = '';
	$brgy = '';
	
	if($form_state['values']['add-country'] == 608){
		$brgy = $form_state['values']['brgy'];
		$other_brgy = $form_state['values']['other_brgy'];
	}
	if(!empty($form_state['values']['city'])){
		$edit = array(
			'field_country_list' => array(
				'und' => array(
					0 => array(
						'value' => $form_state['values']['add-country'],
					),
				),
			),
			
			'field_not_ph_province' => array(
				'und' => array(
					0 => array(
						'value' => $form_state['values']['state_prov'],
					),
				),
			),
			
			'field_not_ph_city' => array(
				'und' => array(
					0 => array(
						'value' => $form_state['values']['city'],
					),
				),
			),
			
			
			'field_post_zip_code' => array(
				'und' => array(
					0 => array(
						'value' => $form_state['values']['add_postalcode'],
					),
				),
			),
		
			'field_billing_address' => array(
				'und' => array(
					0 => array(
						'value' => $form_state['values']['add_street'],
					),
				),
			),
			'field_barangay' => array(
				'und' => array(
					0 => array(
						'value' => $brgy,
					),
				),
			),
			'field_other_brgy' => array(
				'und' => array(
					0 => array(
						'value' => $other_brgy,
					),
				),
			),
		);
		user_save($form['#account'], $edit);
		$form_state['redirect'] = '/user-save-success';
	}else{
		drupal_set_message("City is required",$type = "error");
	}
	
	// if(isset($form_state['values']['add-country']) == 608){
	
}


function _country_myaccount_callback($form, &$form_state){
	return $form['textfields'];
}
function _edit_login_details_form($form, &$form_state){
	drupal_add_css(drupal_get_path('module','uc_smappliance').'/account.css');
	// drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/editaccount.js');
	$form['asterisk'] =array(
		'#type' => 'item',
  		'#markup' => t('Fields with asterisk (*) are required'),
		'#weight' => -26,
	);
	
	global $user;
	$account = user_load($user->uid);
	 
	$form['#account'] = $GLOBALS['user'];
	
	$form['uname'] = array(
		'#type' => 'textfield',
		'#title' => t('Username'),
		'#default_value' => $user->name,
		'#maxlength' => 100,
		'#element_validate' => array('_check_new_username_validate'),
		'#required' => TRUE,
		'#maxlength' => 100,
		'#attributes' => array('onpaste' => array('return false')),
		'#description' => t('Spaces are allowed; punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.'),
		
	);
	
	$form['mail'] = array(
		'#type' => 'textfield',
		'#title' => t('Email'),
		'#default_value' => $user->mail,
		'#element_validate' => array('_custom_email_validate'),
		'#required' => TRUE,
		'#maxlength' => 100,
		'#attributes' => array('onpaste' => array('return false')),
		'#description' => t('A valid e-mail address. All e-mails from the system will be sent to this address. The e-mail address is not made public and will only be used if you wish to receive a new password or wish to receive certain news or notifications by e-mail.'),
	);
	
	$form['current_pass'] = array(
		'#type' => 'password',
		'#title' => t('Current password'),
		'#size' => 25,
		'#required' => TRUE,
		'#maxlength' => 15,
		'#attributes' => array('onpaste' => array('return false')),
	);
	
	$form['pass'] = array(
	  '#type' => 'password_confirm',
//	  '#title' => t('New Password'),
	  '#element_validate' => array('_custom_pass_validate'),
	  '#maxlength' => 15,
	  '#size' => 25,
	  '#attributes' => array('onpaste' => array('return false')),
	  '#description' => t('Provide a password for the new account in both fields. Password must be at least 6 characters.'),
	);
	
	$form['x-submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);
	return $form;
}

function _edit_address_details_callback($form, &$form_state){
	return $form['textfields']['city'];
}


/*
 * Password
 *
 */

function _custom_pass_validate(&$form, &$form_state){
	$xpassword = strlen($form_state['values']['pass']);
	if(!empty($xpassword)){
		if($xpassword < 6){
			form_set_error('pass', t('Please enter minimum of 6 characters for your password.'));
		}
	}
}

/*
 *
 * Check username
 *
 */
function _check_new_username_validate(&$form, &$form_state){
	global $user;
	if(isset($form_state['values']['uname'])){
		$name = $form_state['values']['uname'];
		
		if($name != $user->name){
			if ($error = _user_validate_name($name)) {
				form_set_error('name', $error);
			}
			else{
				$xname = trim($form_state['values']['uname']);
				if(!empty($xname)){
					if (db_query("SELECT COUNT(*) FROM {users} WHERE name = :name", array(':name' => $name))->fetchField()) {
					  // User doesn't exist
					  form_set_error('name', t('The name '.$name.' is already taken.'));
					}
				}
			}
		}
	}
}

/**
 * Validate handler for change_password_form().
 */
function _edit_login_details_form_validate(&$form, &$form_state) {
  require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

  if (!user_check_password($form_state['values']['current_pass'], $form['#account'])) {
    form_set_error('current_pass', t('The current password you provided is incorrect.'));
  }
}

/**
 * Submit handler for change_password_form().
 */
function _edit_login_details_form_submit(&$form, &$form_state) {
	$edit = array();
	global $user;
	if(empty($form_state['values']['pass'])){
		$edit = array(
			'name' => $form_state['values']['uname'],
			'mail' => $form_state['values']['mail'],
		);
		
		if($user->mail != $form_state['values']['mail']){
			_uc_smappliance_drupal_mail('default_from', $user->mail, 'Change Email Notification', 'Hi '.  $user->name .', <br /><br /><br />You have successfully changed your email address from ' . $user->mail . ' to ' .$form_state['values']['mail'] . '.<br /><br /> <br />SM Appliance Center Inc.');
		}
		
		drupal_set_message("Account has been updated.");
		user_save($form['#account'], $edit);
		$form_state['redirect'] = '/user-save-success';
	}else{
		$passlen = strlen(trim($form_state['values']['pass']));
		
		if($passlen < 6){
			form_set_error('pass', t('Password allow a minimum of 6 and maximum of 15 characters.'));
		}else{
			$edit = array(
				'pass' => $form_state['values']['pass'],
				'name' => $form_state['values']['uname'],
				'mail' => $form_state['values']['mail'],
			);
			if($user->mail != $form_state['values']['mail']){
				_uc_smappliance_drupal_mail('default_from', $user->mail, 'Change Email Notification', 'Hi '.  $user->name .', <br /><br /><br />You have successfully changed your email address from ' . $user->mail . ' to ' .$form_state['values']['mail'] . '.<br /><br /> <br />SM Appliance Center Inc.');
			}
			drupal_set_message("Account has been updated.");
			user_save($form['#account'], $edit);
			$form_state['redirect'] = '/user-save-success';
		}
		
	}
}

function _custom_email_validate($form, &$form_state){
	$account = $form['#account'] = $GLOBALS['user'];
	if(!$form_state['values']['mail']){
		// drupal_set_message('please enter email address',$type = 'error');
	}
//	if (!valid_email_address($form_state['values']['mail'])) {
//		//drupal_set_message('The e-mail address '.$form_state['values']['mail'].' is not valid.', $type = 'error');
//		form_set_error('mail', t('The e-mail address '.$form_state['values']['mail'].' is not valid.'));
//    }
	
	if(!valid_email_address($form_state['values']['mail'])){
		form_set_error('mail', t('The email address appears to be invalid.'));
	}
	else{
	 if ($error = user_validate_mail($form_state['values']['mail'])) {
		  form_set_error('mail', $error);
		}
		elseif ((bool) db_select('users')->fields('users', array('uid'))->condition('uid', $account->uid, '<>')->condition('mail', db_like($form_state['values']['mail']), 'LIKE')->range(0, 1)->execute()->fetchField()) {
		  // Format error message dependent on whether the user is logged in or not.
		  if ($GLOBALS['user']->uid) {
			form_set_error('mail', t('The e-mail address %email is already taken.', array('%email' => $form_state['values']['mail'])));
		  }
		  else {
			form_set_error('mail', t('The e-mail address %email is already registered. <a href="@password">Have you forgotten your password?</a>', array('%email' => $form_state['values']['mail'], '@password' => url('user/password'))));
		  }
		}
	}
}


function _ajax_edit_address_callback($form, &$form_state){
	return $form['textfields']['city'];
}

/*
 * Implement hook_form_user_register_form_alter
 * hook_form_FORM_ID_alter
 * hook_form
 * funtion _iba_form($form, &$form_state){    }
 */
function uc_smappliance_form_user_register_form_alter(&$form, $form_state, $form_id) {
	drupal_add_js(drupal_get_path('module','uc_smappliance').'/js/transfer.js');
	$form['asterisk'] =array(
		'#type' => 'item',
  		'#markup' => t('Fields with asterisk (*) are required'),
		'#weight' => -26,
	);
	
	$firtsname_unique_code = isset($form_state['values']['firtsname_unique_code']) ? $form_state['values']['firtsname_unique_code'] : gen_chars(9);
	$form['firtsname_unique_code'] = array(
		'#type' => 'textfield',

		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $firtsname_unique_code,
		'#weight' => -25,
		'#attributes' => array('style' => array('display: none;'))
	);
	
	$lastname_unique_code = isset($form_state['values']['lastname_unique_code']) ? $form_state['values']['lastname_unique_code'] : gen_chars(9);
	$form['lastname_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $lastname_unique_code,
		'#weight' => -25,
		'#attributes' => array('style' => array('display: none;'))
	);
	$dob_unique_code = isset($form_state['values']['dob_unique_code']) ? $form_state['values']['dob_unique_code'] : gen_chars(9);
	$form['dob_unique_code'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 50, 
		'#value' => $dob_unique_code,
		'#weight' => -25,
		'#attributes' => array('style' => array('display: none;'))
	);
	
	
	$cardval = '';
	$_SESSION['registration']['smac'] = '';
	$_SESSION['cardno'][1] = 0;
	$_SESSION['cardno'][2] = 0;
	$_SESSION['cardno'][3] = 0;
	$_SESSION['smac']['multicard'] = '';
	$active = array(1 => t('&nbsp;&nbsp;Mr.'), 2 => t('&nbsp;&nbsp;Ms.'));
	
	$form['account-mark'] =array(
		'#type' => 'item',
  		'#markup' => t('Account Details'),
		'#weight' => -22,
	);
	
	$form['active'] = array(
		'#type' => 'radios',
		'#title' => t('Title'),
		'#default_value' => 0,
		'#options' => $active,
		'#weight' => -21,
	);
	$form['firstname'] = array(
		'#type' => 'textfield',
		'#title' => t('First Name'), 
		'#default_value' => '',
		'#required' => TRUE,
		'#weight' => -20,
		'#maxlength'=> 100,
		'#attributes' => array('onpaste' => array('return false')),
	 );
	$form['lastname'] = array(
		'#type' => 'textfield',
		'#title' => t('Last Name'), 
		'#default_value' => '', 
		'#maxlength' => 100, 
		
		'#weight' => -19,
		'#required' => TRUE,
		'#attributes' => array('onpaste' => array('return false')),
		
	);
	$form['bill_address'] = array(
		'#type' => 'textfield',
		'#title' => t('Address'), 
		'#default_value' => '', 
		'#weight' => -18,
		'#maxlength' => 255, 
		'#required' => TRUE,
		'#attributes' => array('onpaste' => array('return false')),
	);
	$countryoptions = _country_options();
	$form['country'] = array(
		'#type' => 'select',
		'#title' => t('Country'),
		'#options' => $countryoptions,
		'#default_value' => 608,
		'#weight' => -17,
		'#required' => TRUE,
		'#ajax' => array(
			'callback' => '_country_callback', 
			'wrapper' => 'textfields', 
			'effect' => 'fade',
		),
	);
	
	
	$form['textfields'] = array(
		'#prefix' => '<div id="textfields">', 
		'#suffix' => '</div>', 
		'#type' => 'fieldset', 
		'#weight' => -15,
	);
  	
	if(isset($form_state['values']['country'])){
		$countryval = $form_state['values']['country'];
	}else{
		$countryval = 608;
	}
	
	if($countryval != 608){
		$prov_opt = isset($form_state['values']['country']) ? $form_state['values']['country'] : 0 ;
		$selected = isset($form_state['values']['state_prov']) ? $form_state['values']['state_prov'] : key($prov_opt);
		$stateprov = _option_prov2($prov_opt);
		
		$form['textfields']['state_prov'] = array(
			'#type' => 'select',
			'#title' => t('Province'),
			'#options' => $stateprov,
			'#default_value' => $selected,
			'#weight' => -16,
			'#required' => TRUE,
		);
	
		$form['textfields']['city1'] = array(
			'#type' => 'textfield',
			'#title' => t('City/Municipality'), 
			'#default_value' => NULL, 
			'#maxlength' => 100, 
			'#weight' => -13,
			'#required' => TRUE,
			'#attributes' => array('onpaste' => array('return false')),
		);
	}else{
		$prov_opt = isset($form_state['values']['country']) ? $form_state['values']['country'] : 608;
		$stateprov = _option_prov2($prov_opt);
		$selected = isset($form_state['values']['state_prov']) ? $form_state['values']['state_prov'] : key($stateprov);
		$citymunipality = array();
			$form['textfields']['state_prov'] = array(
			'#type' => 'select',
			'#title' => t('Province'),
			'#options' => $stateprov,
			'#default_value' => $selected,
			'#weight' => -16,
			'#required' => TRUE,
			'#ajax' => array(
				'callback' => '_ajax_callback',
				'wrapper' => 'second-option',),
			);
		//options municipality
		$citymunipality = _option_muni($selected);
		$citySelected = isset($form_state['values']['city']) ? $form_state['values']['city'] : key($citymunipality);
		$form['textfields']['city'] = array(
			'#type' => 'select',
			'#title' => t('City/Municipality'),
			'#options' => $citymunipality,
			'#default_value' => $citySelected,
			'#prefix' => '<div id="second-option">',
			'#suffix' => '</div>',
			'#weight' => -15,
			'#required' => TRUE,
			'#ajax' => array(
				'callback' => '_ajax_brgy_callback',
				'wrapper' => 'third-option',),
		);
		
		
		
		
		$brgy_opt = _option_brgy($citySelected);
		$brgy_selected = isset($form['textfields']['brgy']) ? $form['textfields']['brgy'] : key($brgy_opt);
		$form['textfields']['brgy'] = array(
			'#type' => 'select',
			'#title' => t('Barangay'),
			'#options' => $brgy_opt,
			'#default_value' => $brgy_selected,
			'#prefix' => '<div id="third-option">',
			'#suffix' => '</div>',
			'#weight' => -14.9,
			'#required' => TRUE,
			'#attributes' => array(
				'class' => array('select-brgy','barangay'),
			),
		);
		$form['textfields']['other_brgy'] = array(
			'#type' => 'textfield',
			'#title' => t('Other'), 
			'#default_value' => '', 
			'#weight' => -14.8,
			'#attributes' => array(
				'onpaste' => array('return false'),
				'class' => array('other-brgy','barangay'),
			),
		);
	}
	
	$form['postalcode'] = array(
		'#type' => 'textfield',
		'#title' => t('Postal/Zip Code'), 
		'#default_value' => '', 
		'#maxlength' => 4, 
		'#weight' => -14,
		'#attributes' => array('onpaste' => array('return false')),
	);
	$form['mobile'] = array(
		'#type' => 'textfield',
		'#title' => t('Mobile No.'), 
		'#maxlength' => 11, 
		'#attributes' => array('onpaste' => array('return false')),
		'#required' => TRUE,
		'#weight' => -13,
		
	);
	$form['telephone'] = array(
		'#type' => 'textfield',
		'#title' => t('Telephone No.'), 
		'#default_value' => '', 
		//'#maxlength' => 10, 
		'#weight' => -12,
		'#attributes' => array('onpaste' => array('return false')),
		'#description' => t('Enter a valid Telephone No.'),
	);
	$form['faxno'] = array(
		'#type' => 'textfield',
		'#title' => t('Fax No.'), 
		'#default_value' => '', 
		//'#maxlength' => 10, 
		'#weight' => -11,
		'#attributes' => array('onpaste' => array('return false')),
		'#description' => t('Enter a valid Fax No.'),
	);
	 
	$form['dateob'] = array(
		'#type' => 'textfield',
		'#title' => t('Date of Birth'),
		'#size' => 10,
		'#maxlength' => 10,
		'#description' => t('YYYY-MM-DD'), 
		'#attributes' => array(
			'class' => array('pickadate'),
			'onpaste' => array('return false')
			),
		'#required' => TRUE,
		'#weight' => -10,
	);

//--------------------------------------------------------------------------	 BDO Rewards card


	$form['smac-wrapper'] = array(
		'#type' => 'item',
		'#title' => t('SM Advantage / Prestige / BDO<br />Rewards card'), 
		'#prefix' => '<div class="smac-wrapper">',
  		'#suffix' => '</div>',
		'#weight' => -9,
		// '#description' => 'Enter your SM Advantage / Prestige / BDO Card', 

 	);
	$form['smac-wrapper']['smac1'] = array(
		'#type' => 'textfield',
		'#title' => t(''), 
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -9,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac2'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -8,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac3'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1,
		'#size' => 1,
		'#weight' => -7,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	
	
	
	$form['smac-wrapper']['smac4'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -6,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	
	$form['smac-wrapper']["markup1"] = array(
		"#markup" => "<div id='m-three'>-</div>",
		'#weight' => -5.5,
	);
	
	$form['smac-wrapper']['smac5'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -5,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac6'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -4,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),

	);
	$form['smac-wrapper']['smac7'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -3,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	
	$form['smac-wrapper']['smac8'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2.9,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	
	$form['smac-wrapper']["markup2"] = array(
		"#markup" => "<div id='m-three'>-</div>",
		'#weight' => -2.8,
	);
	$form['smac-wrapper']['smac9'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2.7,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac10'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2.6,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac11'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2.5,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac12'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2.3,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']["markup3"] = array(
		"#markup" => "<div id='m-three'>-</div>",
		'#weight' => -2.2,
	);
	$form['smac-wrapper']['smac13'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2.1,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac14'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -2,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac15'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -1.9,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['smac16'] = array(
		'#type' => 'textfield',
		'#default_value' => '', 
		'#maxlength' => 1, 
		'#size' => 1,
		'#weight' => -1.8,
		'#attributes' => array('class' => array('smac-field'),'onpaste' => 'return false'),
	);
	$form['smac-wrapper']['validate_card'] = array(
	  '#type' => 'button',
	  '#value' => t('Validate Card'),
	  '#weight' => -1.1,
	  '#ajax' => array(
		  'callback' => '_test_ajax_callback',
		  'method' => 'html',
		  'wrapper' => 'card-status',
		  'effect' => 'fade',
		  'event' => 'click',
		),
	);
	
	$form['validcard'] = array(
		'#type' => 'textfield',
		'#maxlength' => 255, 
		'#weight' => -1,
		'#attributes' => array('style' => array('display: none;')),
	);
	
	
	$form['smac-wrapper']['addmore'] = array(
		'#type' => 'button',
		'#value' => t('Clear'),
		'#attributes' => array('class' => array('add-more-link')),
		'#weight' => 0,
	);
	$form['smac-wrapper']['wrapper'] = array(
		'#prefix' => '<div id="card-status">',
		'#suffix' => '</div>',
		'#weight' => 1,
		'#attributes' => array('class' => array('message-status-wrapper')),
	);
	
	$form['smac-wrapper']['description'] = array(
		'#type' => 'item',
  		'#markup' => '<p class="earn-more" style="color: #888888; font-size: 10px; font-style: italic; margin: 0">Enter your SM Advantage/Prestige/BDO Rewards card</p>',
		'#weight' => 0.9,
		'#attributes' => array('class' => array('description-wrapper')),
	);

	$form['login-mark'] =array( 
		'#type' => 'item',
  		'#markup' => t('Login Details'),
		'#weight' => -0.1,
		'#attributes' => array('class' => array('login-details')),
	);
//--------------------------------------------------------------------------	

	$form['tin-mark'] =array(
		'#type' => 'item', 
  		'#markup' => t('Other Information'),


	);

	$form['tax-tin'] = array( 
		'#type' => 'textfield',
		'#title' => t('Tax Identification No.'),
		'#default_value' => '', 
		'#maxlength' => 12, 
		'#attributes' => array(
			'class' => array('tin-field'),
			'onpaste' => array('return false'),
			),
	);
	
	$form['actions'] = array('#type' => 'actions');
	$form['actions']['submit'] = array(
		'#type' => 'submit', 
		'#value' => t('Create an account'),
	);
	
	
	
	unset($form['#submit']);
	$form['#submit'][] = '_custom_user_register_submit';
	return $form;
}

function _ajax_callback($form, &$form_state){
	return $form['textfields']['city'];
}

function _country_callback($form, &$form_state){
	return $form['textfields'];
}

function _ajax_brgy_callback($form, &$form_state){
	return $form['textfields']['brgy'];
} 

function _test_ajax_callback($form, &$form_state){
	$ctr = 1;
	$cardto = '';
	$cardval = '';
	$rec = '';
	$test_ctr = 0;
	$test = array();
	$value = '';
	$all_smac = '';
	for($ctr; $ctr <= 16; $ctr++){
		$cardval .= trim($form_state['values']['smac'.$ctr]);
	}
	$query = db_select('z_reg_smac', 'u');
	$query->fields('u',array('p_name','smac_no',))
		->condition('p_name', $form_state['values']['firtsname_unique_code'])
		->condition('l_name', $form_state['values']['lastname_unique_code'])
		->condition('b_day', $form_state['values']['dob_unique_code']);
	$result = $query->execute();
	
	while($record = $result->fetchAssoc()) {
		$card2 = '';
		$card2 = substr($record['smac_no'],0,4).'-'.substr($record['smac_no'],4,4).'-'.substr($record['smac_no'],8,4).'-'.substr($record['smac_no'],12,4);		
		$card2 = $card2.substr($record['smac_no'],16).'<br />';
		$all_smac .= '<span class="cardno">'.$card2.'</span>';
	}
		
	if(strlen($cardval) != 16){
		return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px;">Please enter valid Loyalty Card(s).</div><strong>'.$all_smac.'</strong>';
	}
	else{
		$check_smac = 'test';
		$mes = '';
		$url = SM_IP.$cardval;
		$stringData = file_get_contents($url);
		$keyexplode = explode("&#60web&#62",$stringData);
		
		
		if(trim($keyexplode[0]) == 'A' || trim($keyexplode[0]) == 'P'){
					
					if(trim($keyexplode[4]) == 'invalid card type'){
						$mes ='Invalid Card Type';
					}
					
					// ADD MORE VALIDATION HERE TO PREVENT DUPLICATE ENTRY
					$query = db_select('z_reg_smac', 'u');
					$query->fields('u',array('smac_no',))
						->condition('smac_no', $cardval.'('.trim($keyexplode[4]).')')
						->condition('p_name', trim($form_state['values']['firtsname_unique_code']))
						->condition('l_name', trim($form_state['values']['lastname_unique_code']))
						->condition('b_day', trim($form_state['values']['dob_unique_code']));
					$result = $query->execute();
					
					while($record = $result->fetchAssoc()) {
						$mes .= 'Please enter another smac number';
					}
					
					if($mes == ''){						  
							$query = db_select('z_reg_smac', 'u');
							$query->fields('u',array('smac_no',))
								->condition('smac_no', $cardval);
							$result = $query->execute();
							while($record = $result->fetchAssoc()) {
								$check_smac .= 'ing';
							}
							if($check_smac == 'test'){
								$smac = db_insert('z_reg_smac')
								  ->fields(array('smac_no','p_name','l_name','b_day'))
								  ->values(array(
									'smac_no' => $cardval.'('.trim($keyexplode[4]).')',
									'p_name' => trim($form_state['values']['firtsname_unique_code']),
									'l_name' => trim($form_state['values']['lastname_unique_code']),
									'b_day' => trim($form_state['values']['dob_unique_code']),
								  ))
								  ->execute();
							}
							  
							$query = db_select('z_reg_smac', 'u');
							$query->fields('u',array('smac_no',))
								->condition('p_name', trim($form_state['values']['firtsname_unique_code']))
								->condition('l_name', trim($form_state['values']['lastname_unique_code']))
								->condition('b_day', trim($form_state['values']['dob_unique_code']));
							$result = $query->execute();
							
							while($record = $result->fetchAssoc()) {
								$newcard1 = '';
								$newcard1 .= $record['smac_no'];
								$card1 = substr($newcard1,0,4).'-'.substr($newcard1,4,4).'-'.substr($newcard1,8,4).'-'.substr($newcard1,12,4);		
								$cardto .= '<span class="cardno">'.$card1.substr($newcard1,16) . '</span><br />';
							}
							return '<br /><strong>'.$cardto.'</strong>';
					}
					else{
						if($mes == 'Please enter another smac number'){
							return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;padding: 5px 0 0 29px; width: 217px; min-height: 22px;">You have already validated this card. Please enter another card number, or continue.</div><strong>'.$all_smac.'</strong>';
						}
						else{
							return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px; width: 200px; min-height: 22px;">Invalid Card Type</div><strong>'.$all_smac.'</strong>';
						}
					}
		}
		elseif(trim($keyexplode[0]) == 'B'){
			return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;padding: 5px 0 0 29px; width: 200px;">Card you are trying to add is already inactive.</div><strong>'.$all_smac.'</strong>';
		}
		elseif(trim($keyexplode[0]) == 'I'){
			return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;padding: 5px 0 0 29px; width: 200px;">Card number you are trying to add is already expired.</div><strong>'.$all_smac.'</strong>';
		}
		else{
			if(trim($keyexplode[4]) == 'invalid card type'){
				return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px; width: 200px;">Invalid Card Type.</div><strong>'.$all_smac.'</strong>';
			}elseif(trim($keyexplode[4]) == 'card does not exist'){
				return '<br /><div style="background-image: url(/misc/message-24-error.png); background-position: left center;background-repeat: no-repeat;border: 1px solid #ED541D;color: #ED541D;height: 25px;padding: 5px 0 0 29px; width: 200px;">Card does not exist.</div><strong>'.$all_smac.'</strong>';
			}
		}
		//return $cardval;  Card does not exist
	}
}

function _option_prov(){
	$options = array();
	$results = db_query("SELECT zone_id, zone_name FROM {uc_zones} WHERE zone_country_id = :countryid", array(':countryid' => '608'));
	$options = array('0' => '- Select -');
	foreach ($results as $option) {
		$options[$option->zone_id] = $option->zone_name;
	}
	return $options;
}

function _option_prov2($country){
	
	$options = array();
	$options = array(NULL => '--SELECT--');
	$results = db_query("SELECT zone_id, zone_name FROM {uc_zones} WHERE zone_country_id = :countryid", array(':countryid' => $country));
	foreach ($results as $option) {
		$options[$option->zone_id] = $option->zone_name;
	}
	return $options;
}

function _option_brgy($city){
	
	$options = array();
	$options = array(NULL => '--SELECT--');
	$results = db_query("SELECT id, barangay_name FROM {uc_zones_barangay} WHERE uz_municipality = :uz_municipality ORDER BY barangay_name ASC", array(':uz_municipality' => $city));
	foreach ($results as $option) {
		$options[$option->id] = $option->barangay_name;
	}
	$options['other'] = "Other";
	return $options;
}


//function _option_muni($city){
//	$zonecode = array();
//	$cityopt = array();
//	
//	$zoneresult = db_query("SELECT zone_code FROM {uc_zones} WHERE zone_id = :zoneid", array(':zoneid' => $city));
//	foreach ($zoneresult as $option) {
//		$zonecode['zone_code'] = $option->zone_code;
//		$cityresult2 = db_query("SELECT * FROM {uc_zones_municipality} WHERE uz_zone = :zonecode ORDER BY municipality_name ASC ", array(':zonecode' => $zonecode));	
//		foreach ($cityresult2 as $option2) {
//			$cityopt[$option2->id]= $option2->municipality_name;
//		}	
//	}
//	return $cityopt;
//}

function _option_muni($city){
	$zonecode = array();
	$cityopt = array();
	if(empty($city)){
		$cityopt = array(NULL => '--SELECT--');
	}else{
			$zoneresult = db_query("SELECT zone_code FROM {uc_zones} WHERE zone_id = :zoneid", array(':zoneid' => $city));
			foreach ($zoneresult as $option) {
			$zonecode['zone_code'] = $option->zone_code;
			$cityresult2 = db_query("SELECT * FROM {uc_zones_municipality} WHERE uz_zone = :zonecode ORDER BY municipality_name ASC ", array(':zonecode' => $zonecode));	
			$cityopt = array(NULL => '--SELECT--');
			foreach ($cityresult2 as $option2) {
				$cityopt[$option2->id] = $option2->municipality_name;
			}	
		}
	}

	return $cityopt;
}

function _country_options(){
	$countryresult = db_query("SELECT country_id, country_name FROM uc_countries");
	foreach ($countryresult as $option) {
		$countryopt[$option->country_id] = $option->country_name;
	}
	return $countryopt;
}

function _get_prov($prov){
	$zones = db_query("SELECT zone_id, zone_name FROM {uc_zones} WHERE zone_id = :country", array(':country' => $prov))->fetchAssoc();
	return $zones['zone_name'];
}

/*
 * Custom Registration Submit   uc_smappliance_form_user_register_form
 * function _custom_user_register_submit($form, &$form_state){
 */
 
function _custom_user_register_submit($form, &$form_state){
	// drupal_set_message($form_state['values']['notphcity']);
	$sv_smac='';
	$test_ctr = 0;
	require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
	
	drupal_add_js('','inline');

	$admin = user_access('administer users');
	if (!variable_get('user_email_verification', TRUE) || $admin) {
		$pass = $form_state['values']['pass'];
	}
	else {
		$pass = user_password();
	}
	$notify = !empty($form_state['values']['notify']);
	// Remove unneeded values.
	form_state_values_clean($form_state);
	$form_state['values']['pass'] = $pass;
	
	$account = new StdClass();
	$account->is_new = TRUE;
	$account->status = TRUE;
	
	$account->name = $form_state['values']['name'];
	$account->pass = user_hash_password($pass);
	$account->mail = $form_state['values']['mail'];
	$account->init = $form_state['values']['mail'];
	//$account->roles[5] = 'for validation';
	$account->field_smac_1[LANGUAGE_NONE][0]['value'] = $form_state['values']['validcard'];
	$account->field_first_name[LANGUAGE_NONE][0]['value'] = $form_state['values']['firstname'];
	$account->field_last_name[LANGUAGE_NONE][0]['value'] = $form_state['values']['lastname'];
	$account->field_title[LANGUAGE_NONE][0]['value'] = $form_state['values']['active'];
	$account->field_date_ob[LANGUAGE_NONE][0]['value'] = $form_state['values']['dateob'];
	$account->field_post_zip_code[LANGUAGE_NONE][0]['value'] = $form_state['values']['postalcode'];
	$account->field_tel_no[LANGUAGE_NONE][0]['value'] = $form_state['values']['telephone'];
	$account->field_modile_no[LANGUAGE_NONE][0]['value'] = $form_state['values']['mobile'];
	$account->field_fax_no[LANGUAGE_NONE][0]['value'] = $form_state['values']['faxno'];
	$account->field_tin[LANGUAGE_NONE][0]['value'] = $form_state['values']['tax-tin'];
	$account->field_billing_address[LANGUAGE_NONE][0]['value'] = $form_state['values']['bill_address'];
	
	$query = db_select('z_reg_smac', 'u');
	$query->fields('u',array('smac_no',))
		->condition('p_name', trim($form_state['values']['firtsname_unique_code']));
	$result = $query->execute();
	
	while($record = $result->fetchAssoc()) {
		$_SESSION['registration']['smac'] .= $record['smac_no'] .'&nbsp;';
		$sv_smac .= $record['smac_no'] .'xxx';
		$test[$test_ctr] = $record['smac_no'] . '<br />';
		$test_ctr += 1;
	}
	
	if($sv_smac != ''){
		$account->field_smac_1[LANGUAGE_NONE][0]['value'] = $sv_smac;
	}
	// field_country_list
	$account->field_country_list[LANGUAGE_NONE][0]['value'] = $form_state['values']['country'];
	
	if($form_state['values']['country'] != 608){
		$account->field_not_ph_city[LANGUAGE_NONE][0]['value'] = $form_state['values']['city1'];
	}else{
		$account->field_not_ph_city[LANGUAGE_NONE][0]['value'] = $form_state['values']['city'];
	}
	
	if($form['textfields']['brgy'] == 'other'){
		$account->field_barangay[LANGUAGE_NONE][0]['value'] = $form_state['values']['brgy'];
		$account->field_other_brgy[LANGUAGE_NONE][0]['value'] = $form_state['values']['other_brgy'];
	}else{
		$account->field_barangay[LANGUAGE_NONE][0]['value'] = $form_state['values']['brgy'];
		$account->field_other_brgy[LANGUAGE_NONE][0]['value'] = '';
	}

	$account->field_not_ph_province[LANGUAGE_NONE][0]['value']  = $form_state['values']['state_prov'];
	
	
	$account = user_save($account);
	
	$smac_deleted = db_delete('z_reg_smac')
		  ->condition('p_name', trim($form_state['values']['firtsname_unique_code']))
		  ->execute();
		  
	// Terminate if an error occurred during user_save().   field_post_zip_code field_date_ob  field_smac_1  state_prov
	if (!$account) {
		drupal_set_message(t("Error saving user account."), 'error');
		$form_state['redirect'] = '';
		return;
	}
	
	$form_state['user'] = $account;
  	$form_state['values']['uid'] = $account->uid;
	
	watchdog('user', 'New user: %name (%email).', array('%name' => $form_state['values']['name'], '%email' => $form_state['values']['mail']), WATCHDOG_NOTICE, l(t('edit'), 'user/' . $account->uid . '/edit'));
	
	// Add plain text password into user account to generate mail tokens.
	$account->password = $pass;
	
	// New administrative account without notification.
	$uri = entity_uri('user', $account);
	
	if ($admin && !$notify) {
		drupal_set_message(t('Created a new user account for <a href="@url">%name</a>. No e-mail has been sent.', array('@url' => url($uri['path'], $uri['options']), '%name' => $account->name)));
	}
	// No e-mail verification required; log in user immediately.
	elseif (!$admin && !variable_get('user_email_verification', TRUE) && $account->status) {
		_user_mail_notify('register_no_approval_required', $account);
		$form_state['uid'] = $account->uid;
		//user_login_submit(array(), $form_state);
		// drupal_set_message(t('You have successfully registered. Please check your registered email for further instructions.'));
		$form_state['redirect'] = ''; 
	}
	// No administrator approval required.
	elseif ($account->status || $notify) {
		$op = $notify ? 'register_admin_created' : 'register_no_approval_required';
		_user_mail_notify($op, $account);
		if ($notify) {
			drupal_set_message(t('A welcome message with further instructions has been e-mailed to the new user <a href="@url">%name</a>.', array('@url' => url($uri['path'], $uri['options']), '%name' => $account->name)));
		}
		else {
			drupal_set_message(t('A welcome message with further instructions has been sent to your e-mail address.'));
			$form_state['redirect'] = '';
		}
	}
	// Administrator approval required.
	else {
	_user_mail_notify('register_pending_approval', $account);
	drupal_set_message(t('Thank you for applying for an account. Your account is currently pending approval by the site administrator.<br />In the meantime, a welcome message with further instructions has been sent to your e-mail address.'));
	$form_state['redirect'] = '';
	}
}


///------------------------------------------
function get_title($title){
	if($title == 1){
		return 'Mr.';
	}
	elseif($title == 2){
		return 'Ms.'; 
	} 
}

function get_country($country){
	$taxo = taxonomy_term_load($country);
	return $taxo->name;
}

function _new_get_country($newcountry){
	$countryresult = db_query("SELECT country_name FROM uc_countries WHERE country_id = '".$newcountry."'");	
	while($record = $countryresult->fetchAssoc()) {
		$returncountry = $record['country_name'];
	}
	return $returncountry;
}

function get_brgy($brgy){
	$qry = "SELECT barangay_name FROM {uc_zones_barangay} WHERE id = :id";
	$brgy_result = db_query($qry,array(":id" => $brgy))->fetchField();
	return $brgy_result;
}

function get_cityprov($cityprov){
	switch($cityprov){
		case '79': {$prov = 'Abra'; break;}
		case '80': {$prov = 'Agusan del Norte'; break;}
		case '81': {$prov = 'Agusan del Sur'; break;}
		case '82': {$prov = 'Aklan'; break;}
		case '83': {$prov = 'Albay'; break;}
		case '84': {$prov = 'Antique'; break;}
		case '85': {$prov = 'Apayao'; break;}
		case '86': {$prov = 'Aurora'; break;}
		case '87': {$prov = 'Basilan'; break;}
		case '88': {$prov = 'Bataan'; break;}
		case '89': {$prov = 'Batanes'; break;}
		case '90': {$prov = 'Batangas'; break;}
		case '91': {$prov = 'Benguet'; break;}
		case '92': {$prov = 'Biliran'; break;}
		case '93': {$prov = 'Bohol'; break;}
		case '94': {$prov = 'Bukidnon'; break;}
		case '95': {$prov = 'Bulacan'; break;}
		case '96': {$prov = 'Cagayan'; break;}
		case '97': {$prov = 'Camarines Norte'; break;}
		case '98': {$prov = 'Camarines Sur'; break;}
		case '99': {$prov = 'Camiguin'; break;}
		case '100': {$prov = 'Capiz'; break;}
		case '101': {$prov = 'Catanduanes'; break;}
		case '102': {$prov = 'Cavite'; break;}
		case '103': {$prov = 'Cebu'; break;}
		case '104': {$prov = 'Compostela Valley'; break;}
		case '105': {$prov = 'Davao del Norte'; break;}
		case '106': {$prov = 'Davao del Sur'; break;}
		case '107': {$prov = 'Davao Oriental'; break;}
		case '108': {$prov = 'Dinagat Islands'; break;}
		case '109': {$prov = 'Eastern Samar'; break;}
		case '110': {$prov = 'Guimaras'; break;}
		case '111': {$prov = 'Ifugao'; break;}
		case '112': {$prov = 'Ilocos Norte'; break;}
		case '113': {$prov = 'Ilocos Sur'; break;}
		case '114': {$prov = 'Iloilo'; break;}
		case '115': {$prov = 'Isabela'; break;}
		case '116': {$prov = 'Kalinga'; break;}
		case '117': {$prov = 'Laguna'; break;}
		case '118': {$prov = 'Lanao del Norte'; break;}
		case '119': {$prov = 'Lanao del Sur'; break;}
		case '120': {$prov = 'La Union'; break;}
		case '121': {$prov = 'Leyte'; break;}
		case '122': {$prov = 'Maguindanao'; break;}
		case '123': {$prov = 'Marinduque'; break;}
		case '124': {$prov = 'Masbate'; break;}
		case '125': {$prov = 'Metro Manila'; break;}
		case '126': {$prov = 'Mindoro Occidental'; break;}
		case '127': {$prov = 'Mindoro Oriental'; break;}
		case '128': {$prov = 'Misamis Occidental'; break;}
		case '129': {$prov = 'Misamis Oriental'; break;}
		case '130': {$prov = 'Mountain Province'; break;}
		case '131': {$prov = 'Negros Occidental'; break;}
		case '132': {$prov = 'Negros Oriental'; break;}
		case '133': {$prov = 'North Cotabato'; break;}
		case '134': {$prov = 'Northern Samar'; break;}
		case '135': {$prov = 'Nueva Ecija'; break;}
		case '136': {$prov = 'Nueva Vizcaya'; break;}
		case '137': {$prov = 'Palawan'; break;}
		case '138': {$prov = 'Pampanga'; break;}
		case '139': {$prov = 'Pangasinan'; break;}
		case '140': {$prov = 'Quezon'; break;}
		case '141': {$prov = 'Quirino'; break;}
		case '142': {$prov = 'Rizal'; break;}
		case '143': {$prov = 'Romblon'; break;}
		case '144': {$prov = 'Samar'; break;}
		case '145': {$prov = 'Sarangani'; break;}
		case '146': {$prov = 'Shariff Kabunsuan'; break;}
		case '147': {$prov = 'Siquijor'; break;}
		case '148': {$prov = 'Sorsogon'; break;}
		case '149': {$prov = 'South Cotabato'; break;}
		case '150': {$prov = 'Southern Leyte'; break;}
		case '151': {$prov = 'Sultan Kudarat'; break;}
		case '152': {$prov = 'Sulu'; break;}
		case '153': {$prov = 'Surigao del Norte'; break;}
		case '154': {$prov = 'Surigao del Sur'; break;}
		case '155': {$prov = 'Tarlac'; break;}
		case '156': {$prov = 'Tawi-Tawi'; break;}
		case '157': {$prov = 'Zambales'; break;}
		case '158': {$prov = 'Zamboanga del Norte'; break;}
		case '159': {$prov = 'Zamboanga del Sur'; break;}
		case '160': {$prov = 'Zamboanga Sibugay'; break;}
	}
	return $prov;
}

function _x_get_minicipality($muni){
	$municity_res = db_query("SELECT municipality_name FROM {uc_zones_municipality} WHERE id = :id", array(':id' => $muni));
	foreach ($municity_res as $option) {
		$municity = $option->municipality_name;
	}
	if(!empty($municity)){return $municity;}
	else{return '';}
}

function _x_get_prov($prov){
	$prov_res = db_query("SELECT zone_name FROM {uc_zones} WHERE zone_id = :id", array(':id' => $prov));
	foreach ($prov_res as $option) {
		$prov = $option->zone_name;
	}
	if(!empty($prov)){return $prov;}
	else{return '';}
}

function uc_smappliance_form_alter(&$form, &$form_state, $form_id){
	if($form_id == 'uc_cart_view_form'){
		
		$form['items']['#columns']['remove'] = array(
			'cell' => t('Action'),
			'weight' => -5,
		);
		$form['items']['#columns']['image'] = array(
			'cell' => t('Item(s)'),
			'weight' => -4,
		);
		$form['items']['#columns']['desc'] = array(
			'cell' => t('Product Name'),
			'weight' => -3,
		);
		$form['items']['#columns']['qty'] = array(
			'cell' => t('Qty.'),
			'weight' => -2,
		);
		$form['items']['#columns']['price'] = array(
		  'cell' => t('Unit Price'), 
		  'weight' => -1,
	  	);
		$form['items']['#columns']['total'] = array(
			'cell' => t('Total Price'),
			'weight' => 0,
		);		
	}
	elseif($form_id == 'uc_cart_checkout_form'){
		$form['actions'] = array('#type' => 'actions');
		$form['actions']['continue'] = array(
			'#type' => 'submit', 
			'#value' => t('Summary'),
		);
		return $form;
	}
	elseif($form_id == 'user_login'){
		drupal_add_js('
			(function($){ 
			$(document).ready(function(){
				$("#user-login .form-item-name input").attr("test","test")
			});
			})(jQuery);
		','inline');
	}
}

function uc_smappliance_tapir_table_alter(&$table, $table_id) {
  if ($table_id == 'uc_cart_view_table') {
    foreach (element_children($table) as $key) {
		//$subtotal += $table[$key]['#total'];
      if (!empty($table['#parameters'][1][$key]['nid'])) {
        $node = node_load($table['#parameters'][1][$key]['nid']['#value']);
		
        $table[$key]['price'] = array(
          '#markup' => theme('uc_product_price',array('element' => array('#value' => $node->sell_price))),
        );
		
		$image = theme('image_style', array('style_name' => 'uc_cart', 'path' => $table['#parameters'][1][$key]['image']['#item']['uri']));
		$pop_nid = $table['#parameters'][1][$key]['nid']['#value']; 
		
		$table[$key]['image'] = array(
          // '#markup' => '<a href="cart-popup?nid='.$pop_nid.'&width=800&height=200&iframe=true" class="colorbox-load">'.$image.'</a>',
		  '#markup' => '<a href="#" hyperlinkid="'.$pop_nid.'" class="quickview imagelink-'.$pop_nid.'">'.$image.'</a>',
        );
		// <div class="form-item form-type-uc-quantity form-item-items-0-qty">  $key
		//$table[$key]['qty']['#attributes'] = array(
		//	'class' => 'test',
		//);
      }
    }
  }
}



/*
 * Implement hook_checkout_pane
 *
 */
function uc_smappliance_uc_checkout_pane(){
	$_SESSION['rewards-card'] = '';
	$panes[] = array(
		'id' => 'rewardcard',
		'callback' => 'uc_smappliance_uc_reward_callback',
		'title' => t('Order Summary'),
		'desc' => t('SM Advantage/Prestige/BDO Rewards card'),
		'weight' => 1, 
		'process' => FALSE, 
		'collapsible' => FALSE,
	);
	$panes[] = array(
		'id' => 'customer-information',
		'callback' => 'uc_smappliance_customer_information_callback',
		'title' => t('Customer Information'),
		'desc' => t('Customer Information'),
		'weight' => 1, 
		'process' => FALSE, 
		'collapsible' => FALSE,
	);
	return $panes;
}

function uc_smappliance_customer_information_callback($op, $order, $form = NULL, &$form_state = NULL){
	global $user;
	$account = user_load($user->uid);
	
	switch ($op) {
		case 'view':{
			$contents['wrapper'] = array(
				'#markup' => 'Order information will be sent to your account e-mail listed below.
<strong><br />E-mail address:&nbsp;&nbsp; <strong> ' . $user->mail . '&nbsp;&nbsp;<a href="/change-email?width=500&height=250&iframe=true" class="colorbox-load">Edit</a>',
				'#prefix' => '<div id="custo-info">',
				'#suffix' => '</div>',
				'#attributes' => array('class' => array('message-status-wrapper')),
			);
			
			return array('contents' => $contents);
		}
		
		case 'process':{
			return $user->mail;
		}
		case 'review':{
				$review[1] = array('title' => t('Email'), 'data' => $user->mail);
				return $review;
		}
	}
}
/*
 * Implement hook_checkout_pane callback
 *
 */
function uc_smappliance_uc_reward_callback($op, $order, $form = NULL, &$form_state = NULL){
	//$_SESSION['test-card'] = ' ';
	global $user;
	$account = user_load($user->uid);
	switch ($op) {
		case 'view':{
			drupal_add_js('
			(function ($) {
				$(document).ready(function(){
					$(".colorload").colorbox({
						href:"/add/user/smac-details",
						width: 600,
						height: 200,
						iframe: true, 
						overlayClose: false,
						scrolling: false
					});				});
			})(jQuery); 
			','inline');
			
			
			drupal_add_css('#cboxContent #content{width: 250px;}','inline');
			drupal_add_css('#cboxContent #block-system-main {width: 260px !important}','inline');
			
			$key_ctr = 0;
			$options = array('0' => '-- Select --');
			if(!empty($account->field_smac_1['und']['0']['value'])){
				$keyexplode = explode("xxx",$account->field_smac_1['und']['0']['value']);
				while(!empty($keyexplode[$key_ctr])){
					$card1 = $keyexplode[$key_ctr];
					$newcard1 = substr($card1,0,4).'-'.substr($card1,4,4).'-'.substr($card1,8,4).'-'.substr($card1,12,4);			
					$cardtocal = substr($keyexplode[$key_ctr],0,16);		
					$options[$cardtocal] = $newcard1.substr($card1,16);
					$key_ctr += 1;
				}
			} 
			$contents['add'] = array(
			  	  '#type' => 'link',
				  '#title' => t('Add Card'),
				  '#href' => '#',
				  '#attributes' => array('class' => 'colorload', 'id' => 'addc'),
			);
				
			$contents['test'] = array(
				'#type' => 'select', 
				'#title' => '<br />', 
				'#options' => $options,
				'#ajax' => array(
				  	  'callback' => '_get_card_status_checkout',
					  'method' => 'html',
					  'wrapper' => 'card-status',
					  'effect' => 'fade',
					),
			);
			$contents['wrapper'] = array(
				'#prefix' => '<div id="card-status">',
				'#suffix' => '</div>',
				'#attributes' => array('class' => array('message-status-wrapper')),
			);
			
			$contents['additional'] = array(
				'#markup' => '<strong><p class="earn-more" style="margin: 0;">Earn SM Advantage/Prestige/BDO Rewards Points. Select or add your SM Advantage/Prestige/BDO Rewards card here.</p></strong><a href="http://www.smadvantage.com.ph" target="_new"><i>Learn more about the SM Advantage Card</i></a> ',
				'#prefix' => '<div id="custo-info">',
				'#suffix' => '</div>',
				'#attributes' => array('class' => array('message-status-wrapper')),
			);
			return array('contents' => $contents);
		}
		case 'process':{
			if($form_state['values']['panes']['rewardcard']['test'] == 0){
				$_SESSION['test-card'] = 'n/a';
			}
			else{
				$reward1 = $form_state['values']['panes']['rewardcard']['test'];
				$url = SM_IP . $reward1;
				$stringData = file_get_contents($url);
				$keyexplode = explode("&#60web&#62",$stringData);
				
				if(trim($keyexplode[0]) == 'A'){
					$_SESSION['test-card'] = $form_state['values']['panes']['rewardcard']['test'];
				}
				else{
					$_SESSION['test-card'] = ' ';
				}
			}
		}
		case 'review':{
				
				if($_SESSION['test-card'] == 'n/a'){
					$newreviewcard = 'n/a';
				}else{
					$reviewcard = $_SESSION['test-card'];
					$newreviewcard = substr($reviewcard,0,4).'-'.substr($reviewcard,4,4).'-'.substr($reviewcard,8,4).'-'.substr($reviewcard,12,4);	
				}
				
				$review[1] = array('title' => t('SM Advantage/Prestige/BDO Rewards card'), 'data' => $newreviewcard);
				return $review;
		}
	}
}

/*
 * Implement hook_checkout_pane   ---   ajax callback
 *
 */
function _get_card_status_checkout($form, &$form_state){
	$reward = $form_state['values']['panes']['rewardcard']['test'];
	$_SESSION['rewards-card'] = '';
	
	$url = SM_IP . $reward;
	$stringData = file_get_contents($url);
	$keyexplode = explode("&#60web&#62",$stringData);
	
	if(trim($keyexplode[0]) == 'A' || trim($keyexplode[0]) == 'P'){
		$_SESSION['rewards-card'] = $form_state['values']['panes']['rewardcard']['test'];
		return drupal_set_message('<strong>Active Card</strong>');
	}
	elseif(trim($keyexplode[0]) == 'B'){
		$_SESSION['rewards-card'] = '';
		return drupal_set_message('Card Block',$type='error'); 
	}
	elseif(trim($keyexplode[0]) == 'I'){
		$_SESSION['rewards-card'] = '';
		return drupal_set_message('Card Inactive',$type='error');
	}
	elseif($reward == 0){
		$_SESSION['rewards-card'] = 'Select a BDO, Prestige or SM Advantage card to earn points';
		return ' ';
	}
	else{
		$_SESSION['rewards-card'] = '';
		return drupal_set_message('Invalid Card Type',$type='error');
	}
}

//
//function number_to_words($number)
//{
//    if ($number > 999999999)
//    {
//       throw new Exception("Number is out of range");
//    }
//
//    $Gn = floor($number / 1000000);  /* Millions (giga) */
//    $number -= $Gn * 1000000;
//    $kn = floor($number / 1000);     /* Thousands (kilo) */
//    $number -= $kn * 1000;
//    $Hn = floor($number / 100);      /* Hundreds (hecto) */
//    $number -= $Hn * 100;
//    $Dn = floor($number / 10);       /* Tens (deca) */
//    $n = $number % 10;               /* Ones */
//	$cn = round(($number-floor($number))*100); /* Cents */
//    $result = ""; 
//
//    if ($Gn)
//    {  $result .= number_to_words($Gn) . " Million, ";  } 
//
//    if ($kn)
//    {  $result .= (empty($result) ? "" : " ") . number_to_words($kn) . " Thousand"; } 
//
//    if ($Hn)
//    {  $result .= (empty($result) ? "" : " ") . number_to_words($Hn) . " Hundred";  } 
//
//    $ones = array("", "One", "Two", "Three", "Four", "Five", "Six",
//        "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen",
//        "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eightteen",
//        "Nineteen");
//    $tens = array("", "", "Twenty", "Thirty", "Fourty", "Fifty", "Sixty",
//        "Seventy", "Eigthy", "Ninety"); 
//
//    if ($Dn || $n)
//    {
//       if (!empty($result))
//       {  $result .= " and ";
//       } 
//
//       if ($Dn < 2)
//       {  $result .= $ones[$Dn * 10 + $n];
//       }
//       else
//       {  $result .= $tens[$Dn];
//          if ($n)
//          {  $result .= "-" . $ones[$n];
//          }
//       }
//    }
//
//    if ($cn)
//    {
//       if (!empty($result))
//       {  $result .= ' Pesos and ';
//       }
//       $title = $cn==1 ? 'cent ': 'cents';
//       $result .= strtolower(number_to_words($cn)).' '.$title;
//    }
//
//    if (empty($result))
//    {  $result = "zero"; } 
//
//    return $result;
//}


function _uc_smappliance_drupal_mail($from = 'default_from', $to, $subject, $message) {
  $my_module = 'uc_smappliance';
  $my_mail_token = microtime();
  if ($from == 'default_from') {
    // Change this to your own default 'from' email address.
    //$from = variable_get('system_mail', 'SM Appliance Center Inc.');
	$from = variable_get('site_mail', ini_get('sendmail_from'));
	//$from = 'test@test.com';
  }
  $message = array(
    'id' => $my_module . '_' . $my_mail_token,
    'to' => $to,
    'subject' => $subject,
    'body' => array($message),
    'headers' => array(
      'From' => $from,
      'Sender' => $from,
      'Return-Path' => $from,
    ),
  );
  $system = drupal_mail_system($my_module, $my_mail_token);
  $message = $system->format($message);
  if ($system->mail($message)) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}


function gen_chars($length) {
    // Available characters
    $chars = '0123456789abcdefghjkmnoprstvwxyz';
   
    $Code = '';
    for ($i = 0; $i < $length; ++$i){
        $Code .= substr($chars, (((int) mt_rand(0,strlen($chars))) - 1),1);
    }
    return $Code;
}